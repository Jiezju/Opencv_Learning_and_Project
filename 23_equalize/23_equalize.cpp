//
// Created by Bright on 2022/5/9.
//

//---------------------------------【头文件、命名空间包含部分】---------------------------
//          描述：包含程序所使用的头文件和命名空间
//-----------------------------------------------------------------------------------------------
#include "opencv2/highgui/highgui.hpp"
#include "opencv2/imgproc/imgproc.hpp"

using namespace cv;


//--------------------------------------【main( )函数】-----------------------------------------
//          描述：控制台应用程序的入口函数，我们的程序从这里开始执行
//-----------------------------------------------------------------------------------------------
int main() {
    // 【1】加载源图像
    Mat srcImage, dstImage;
    srcImage = imread("1.jpg", 1);
    if (!srcImage.data) {
        printf("读取图片错误，请确定目录下是否有imread函数指定图片存在~！ \n");
        return -1;
    }

    // 【2】转为灰度图并显示出来
    cvtColor(srcImage, srcImage, COLOR_BGR2GRAY);
    imshow("原始图", srcImage);

    // 【3】进行直方图均衡化
    /*
     * 本质是扩大了量化间隔，但是减少了量化级别
     * 1. 对于图像本身对比度较高的情况下，均衡化则导致对比度降低
     * 2. 泛白图像，则会合并像素深度，增大对比度
     *
     * 均衡化算法：
     * 1. 计算输入图像直方图
     * 2. 进行直方图归一化
     * 3. 计算各个像素值的累家概率
     * 4. 以 累加直方图，进行图像变换
     * */
    equalizeHist(srcImage, dstImage);

    // 【4】显示结果
    imshow("经过直方图均衡化后的图", dstImage);

    // 等待用户按键退出程序
    waitKey(0);
    return 0;

}